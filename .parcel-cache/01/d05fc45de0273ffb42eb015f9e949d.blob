var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
_parcelHelpers.export(exports, "displayRRProcess", function () {
  return displayRRProcess;
});
_parcelHelpers.export(exports, "roundRobinHandler", function () {
  return roundRobinHandler;
});
var _configGlobalVar = require("../../config/globalVar");
var _utilsViewTabUtils = require("../utilsView/tabUtils");
const processRRRows = document.querySelector(".process__info-rr-box");
const rrScheduling = document.querySelector(".nav__menu-item__RR");
_utilsViewTabUtils.tabfunctionality();
const displayRRProcess = function (pid, arrival, burst, waiting, turnaround) {
  const html = `
      <div class="row process__row">
          <div class="col-md-3 process__desc">Process ${pid}</div>
          <div class="col-md-9">
              <div class="row">
                  <div class="col-md-3 process__time">${arrival}</div>
                  <div class="col-md-3 process__time">${burst}</div>
                  <div class="col-md-3 process__time">${waiting}</div>
                  <div class="col-md-3 process__time">${turnaround}</div>
              </div>
          </div>
      </div>
      `;
  processRRRows.insertAdjacentHTML("beforeend", html);
};
const roundRobinHandler = function (publisher) {
  rrScheduling.addEventListener("click", function () {
    _configGlobalVar.globalVar.btnRRClick++;
    let shouldCallAlgo = _configGlobalVar.globalVar.btnRRClick === 1 && _configGlobalVar.globalVar.btnSummaryClick === 0;
    if (shouldCallAlgo) publisher(_configGlobalVar.globalVar.processId, _configGlobalVar.globalVar.burstTimes, _configGlobalVar.globalVar.quantum, _configGlobalVar.globalVar.arrivalTimes);
  });
};
